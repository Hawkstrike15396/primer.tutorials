# Start with https://github.com/features/actions and https://github.com/r-lib/actions
# for general background information.

# A better approach is probably to use r2u. This is probably the future of fast
# builds of R environments. Currently, it seems like r2u and setup-renv do not play
# nicely with each other.

# Workflow will run on push or pull request.
# Can specify branches if we expand past a master branch.

on:
  push:
  pull_request:

# Just the name of the workflow. I am a little confused as to the connection
# between the `name:` of the (check? job?) and the `R-CMD-check:` string
# just below it. Do those two things need to be the same? What is the
# `R-CMD-check:` accomplishing?

name: R-CMD-check
jobs:
  R-CMD-check:

    # Runs on ubuntu because installing weird stuff like gdal is a pain
    # on non-Unix OS.

    runs-on: ubuntu-latest

    # Environmental variables:
    # You can use environment variables to store information
    # that you want to reference in your workflow.
    # You reference environment variables within a
    # workflow step or an action, and the variables are interpolated on the
    # running machine that runs your workflow

    env:

      # Forces binary download instead of building packages from source. Still
      # not sure if we really need all these variables. For example, since we
      # are no longer using renv, do we really need R_LIBS_USER? I also doubt
      # that we need RENV_ACTIVATE_PROJECT.

      R_COMPILE_AND_INSTALL_PACKAGES: never
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_ACTIVATE_PROJECT: TRUE
      R_LIBS_USER: ~/Library/Application Support/renv
      GITHUB_ACTION: TRUE

      # Census api key is not working, not sure how to embed it.
      # We have already defined it as a secret in github.

      CENSUS_API_KEY: ${{ secrets.CENSUS_KEY }}

      # Not sure why but this variable seems to improve workflow.

      R_KEEP_PKG_SOURCE: yes

    steps:

    # setup-renv is not as sophisticated (or as error prone?) as setup-r-dependencies,
    # so, we need to install a handful of unbuntu binaries by hand. This is annoying!
    # But it is also necessary because setup-r-dependencies, at least with our set up,
    # does not using caching correctly. (Don't forget that you need to set cache-version
    # to a number different from 1 if you want to blow away the old cache.)

      - name: Install needed libraries
        run: sudo apt-get install -y libcurl4-openssl-dev libudunits2-dev libgdal-dev libgeos-dev libproj-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev

      # All these "uses:" steps refer to default yaml files
      # that people have already created, making our lives easier!
      # See the following ReadMe file for information on each command.
      # https://github.com/r-lib/actions.

      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2

      # The default value of the cache-version is 1, which just uses what is there. If
      # you want to rebuild the cache, set this to >1.

      - uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1

      # Sure seems like check-r-package should take care of this installation, but
      # it does not seem to do so. Note that you can't just include rcmdcheck in the
      # DESCRIPTION file without causing failure to local calls to R CMD check.

      - run: Rscript -e 'install.packages("rcmdcheck")'

      - uses: r-lib/actions/check-r-package@v2
